    //
    // $(document).ready(function(){
    //     if (screen.width > 480){
    //         $(window).scroll(function(){
    //             if($(window).scrollTop()>170){
    //                 $('.wrapper-text-title-btn').fadeIn(1500)
    //             }else{
    //                 $('.wrapper-text-title-btn').fadeOut(700)
    //             }
    //             if($(window).scrollTop()>1700){
    //                 $('.wrapper-big-title').fadeIn(1500);
    //                 $('.wrapper-big-subtitle').fadeIn(1500)
    //
    //             }else{
    //                 $('.wrapper-big-title').fadeOut(700);
    //                 $('.wrapper-big-subtitle').fadeOut(700)
    //             }
    //         });
    //     }
    //
    // });


var myMap;

// Дождёмся загрузки API и готовности DOM.
ymaps.ready(init);

function init () {
    // Создание экземпляра карты и его привязка к контейнеру с
    // заданным id ("map").
    myMap = new ymaps.Map('map', {
        // При инициализации карты обязательно нужно указать
        // её центр и коэффициент масштабирования.
        center: [45.032553, 39.062971], // Cтаромышастовская
        controls: [ ],  // Массив для навигации карты
        zoom: 13
    }, {
        searchControlProvider: 'yandex#search'
    });



// Создание геообъекта со cвоим изображением.
    //Переменная myPlacemark
    var myPlacemark = new ymaps.Placemark([45.032553, 39.062971], {}, {

        iconLayout: 'default#image',
        iconImageHref: 'img/icon-map.png',
        iconImageSize: [30, 42],
        iconImageOffset: [-15, -40]
    });

// Размещение геообъекта на карте.
    myMap.geoObjects
        .add(myPlacemark);

// Добавим на карту ползунок масштаба и линейку.
    myMap.controls.add('zoomControl');

//Отключить изменение маштаба колесом и косанием
    myMap.behaviors.disable(['scrollZoom' , 'multiTouch' , 'drag']);
}




// /*global $ */
// $(document).ready(function() {
//
//     "use strict";
//
//     $('.menu > ul > li:has( > ul)').addClass('menu-dropdown-icon');
//     //Checks if li has sub (ul) and adds class for toggle icon - just an UI
//
//     $('.menu > ul > li > ul:not(:has(ul))').addClass('normal-sub');
//     //Checks if drodown menu's li elements have anothere level (ul), if not the dropdown is shown as regular dropdown, not a mega menu (thanks Luka Kladaric)
//
//     $(".menu > ul").before("<a href=\"#\" class=\"menu-mobile\"></a>");
//
//     //Adds menu-mobile class (for mobile toggle menu) before the normal menu
//     //Mobile menu is hidden if width is more then 959px, but normal menu is displayed
//     //Normal menu is hidden if width is below 959px, and jquery adds mobile menu
//     //Done this way so it can be used with wordpress without any trouble
//
//     $(".menu > ul > li").hover(function(e) {
//         if ($(window).width() > 943) {
//             $(this).children("ul").stop(true, false).fadeToggle(150);
//             e.preventDefault();
//         }
//     });
//     //If width is more than 943px dropdowns are displayed on hover
//
//     $(".menu > ul > li").click(function() {
//         if ($(window).width() <= 943) {
//             $(this).children("ul").fadeToggle(150);
//         }
//     });
//     //If width is less or equal to 943px dropdowns are displayed on click (thanks Aman Jain from stackoverflow)
//
//     $(".menu-mobile").click(function(e) {
//         $(".menu > ul").toggleClass('show-on-mobile');
//         e.preventDefault();
//     });
//     //when clicked on mobile-menu, normal menu is shown as a list, classic rwd menu story (thanks mwl from stackoverflow)
//
// });
$( '.show-menu-btn' ).on( 'click', function(){
        $( '.menu' ).addClass( 'open-menu' );
});

$( '.close-menu' ).on( 'click', function(){
    $( '.menu' ).removeClass( 'open-menu' );
});




var galleryThumbs = new Swiper('.gallery-thumbs', {
    spaceBetween: 10,
    slidesPerView: 1,
    loop: false,
    freeMode: true,
    loopedSlides: 5, //looped slides should be the same
    watchSlidesVisibility: true,
    watchSlidesProgress: true,
});
var galleryTop = new Swiper('.gallery-top', {
    effect: 'flip',
    spaceBetween: 10,
    loop:true,
    loopedSlides: 5, //looped slides should be the same
    navigation: {
        nextEl: '.n',
        prevEl: '.p',
    },
    // autoplay: {
    //     delay: 10000,
    // },
    thumbs: {
        swiper: galleryThumbs,
    },
});

var galleryThumbs = new Swiper('.little-img-sl', {
    spaceBetween: 10,
    slidesPerView: 4,
    // Responsive breakpoints
    breakpoints: {
        // when window width is >= 320px
        320: {
            slidesPerView: 2.5,
            spaceBetween: 20
        },
        // when window width is >= 480px
        480: {
            slidesPerView: 3,
            spaceBetween: 20
        },
        // when window width is >= 640px
        767: {
            slidesPerView: 4,
            spaceBetween: 20
        }
    },
    freeMode: true,
    watchSlidesVisibility: true,
    watchSlidesProgress: true,
});
var galleryTop = new Swiper('.sl-img-big', {
    spaceBetween: 10,
    navigation: {
        nextEl: '.swiper-button-product-n',
        prevEl: '.swiper-button-product-p',
    },
    thumbs: {
        swiper: galleryThumbs
    }
});
var swiper = new Swiper('.heder-slider', {
    direction: 'vertical',
    autoplay: {
        delay: 5000,
    },

    pagination: {
        el: '.heder-slider_pagination',
        clickable: true,
    },
    breakpoints: {
        // when window width is >= 320px
        320: {
            direction: 'horizontal',
        },

        // when window width is >= 640px
        990: {
            direction: 'vertical',
        }
    }
});